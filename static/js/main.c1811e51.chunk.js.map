{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","services/api/api.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js"],"names":["module","exports","api","axios","create","baseURL","getAllContacts","a","get","addContact","contact","post","delContact","id","delete","createAsyncThunk","_","rejectWithValue","data","newContact","name","phone","number","ContactForm","useState","setName","setNumber","dispatch","useDispatch","inputChange","event","target","value","onSubmit","preventDefault","operations","className","s","form","type","pattern","title","required","onChange","input","button","createAction","filterContacts","getContacts","state","items","filter","toLowerCase","includes","getFilter","Filter","useSelector","actions","ContactList","useEffect","contacts","list","map","item","onClick","App","itemsReducer","createReducer","fulfilled","action","payload","some","alert","filterReducer","pending","rejected","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1811e51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1FqB5\",\"input\":\"ContactForm_input__2albY\",\"button\":\"ContactForm_button__2Oa9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16U9r\",\"item\":\"ContactList_item__2uxYC\",\"button\":\"ContactList_button__1GQqd\"};","import axios from \"axios\"\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://61bdb5d12a1dd4001708a0fa.mockapi.io/'\r\n})\r\n\r\nexport async function getAllContacts(){\r\n    try {\r\n        return api.get('contacts')\r\n    } catch (error){\r\n        return error\r\n    }\r\n}\r\n\r\nexport async function addContact(contact){\r\n    try{\r\n        return api.post('contacts', contact)\r\n    } catch (error){\r\n        return error\r\n    }\r\n}\r\n\r\nexport async function delContact(id){\r\n    try{\r\n        return api.delete(`contacts/${id}`)\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as api from '../../services/api/api'\r\n\r\n\r\nexport const getAllContacts = createAsyncThunk(\r\n    'phonebook/getAllContacts',\r\n    async (_, {rejectWithValue}) => {\r\n        try {\r\n            const {data} = await api.getAllContacts()\r\n            return data\r\n        } catch (error){\r\n            return rejectWithValue(error)\r\n        }\r\n    }\r\n)\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'phonebook/addContact',\r\n    async (contact, {rejectWithValue}) => {\r\n        const newContact = {\r\n            name: contact.name,\r\n            phone: contact.number\r\n        }\r\n        try {\r\n            const {data} = await api.addContact(newContact)\r\n            return data\r\n        } catch (error){\r\n            return rejectWithValue(error)\r\n        }  \r\n    }\r\n)\r\n\r\nexport const delContact = createAsyncThunk(\r\n    'phonebook/delContact',\r\n    async (id, {rejectWithValue}) => {\r\n        try {\r\n            const {data} = await api.delContact(id)\r\n            return data\r\n        } catch (error){\r\n            return rejectWithValue(error)\r\n        }\r\n    }\r\n)\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as operations from '../../redux/phonebook/phonebook-operations'\r\nimport s from './ContactForm.module.css'\r\n\r\n\r\nexport default function ContactForm(){\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const inputChange = (event) => {\r\n      switch(event.target.name){\r\n        case 'name':\r\n          setName(event.target.value)\r\n          break\r\n        case 'number':\r\n          setNumber(event.target.value)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    \r\n     const formSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(operations.addContact({\r\n          name,\r\n          number,\r\n        }))\r\n        setName('')\r\n        setNumber('')\r\n      }\r\n\r\n        return (\r\n        <form onSubmit = {formSubmit} className ={s.form}>\r\n          <label>\r\n            <h3>Name</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              onChange = {inputChange}\r\n              value = {name}\r\n              className = {s.input}\r\n            />\r\n            <h3>Number</h3>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              onChange = {inputChange}\r\n              value = {number}\r\n              className = {s.input}\r\n            />\r\n          </label>\r\n          <button type = \"submit\" className = {s.button}>Add contact</button>\r\n        </form> \r\n        )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// const addContact = createAction('phonebook/addContact', (contact) => {\r\n//     return {\r\n//         payload:{\r\n//             name: contact.name,\r\n//             phone: contact.number\r\n//         }\r\n//     }\r\n// })\r\n// const delContact = createAction('phonebook/delContact')\r\n\r\n\r\n\r\n// const actions = {addContact, delContact, filterContacts}\r\n// export default actions\r\n\r\n\r\nexport const getAllContactsRequest = createAction('phonebook/getAllContactsRequest')\r\nexport const getAllContactsSucces = createAction('phonebook/getAllContactsSucces')\r\nexport const getAllContactsError = createAction('phonebook/getAllContactsError')\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest')\r\nexport const addContactSucces = createAction('phonebook/addContactSucces')\r\nexport const addContactError = createAction('phonebook/addContactError')\r\n\r\nexport const delContactRequest = createAction('delContactRequest')\r\nexport const delContactSucces = createAction('phonebook/delContactSucces')\r\nexport const delContactError = createAction('phonebook/delContactError')\r\n\r\nexport const filterContacts = createAction('phonebook/filterContacts')","\r\nexport const getContacts = state => {\r\n    return state.items.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))\r\n}\r\n\r\nexport const getFilter = state => state.filter","import PropTypes from 'prop-types'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport * as actions from '../../redux/phonebook/phonebook-actions'\r\nimport {getFilter} from '../../redux/phonebook/phonebook-selectors'\r\n\r\nexport default function Filter(){\r\n    const value = useSelector(getFilter)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <>\r\n        <p>Find contacts by name</p>\r\n          <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                onChange = {(event) => dispatch(actions.filterContacts(event.target.value))}\r\n                value = {value}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string\r\n}","import { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './ContactList.module.css'\r\nimport {getContacts} from '../../redux/phonebook/phonebook-selectors'\r\nimport * as operations from '../../redux/phonebook/phonebook-operations'\r\n\r\n\r\nexport default function ContactList(){\r\n\r\n    const dispatch = useDispatch()\r\n  \r\n    useEffect(() => {\r\n        dispatch(operations.getAllContacts())\r\n    }, [dispatch])\r\n\r\n\r\n \r\n\r\n    function onDelete(id){\r\n        dispatch(operations.delContact(id))\r\n    }\r\n\r\n    const contacts = useSelector(getContacts)\r\n\r\n    return(\r\n        <ul className = {s.list}>\r\n            {contacts.map(contact => {\r\n                return(\r\n                    <li key = {contact.id} id = {contact.id} className = {s.item}>\r\n                        <p>{contact.name}: {contact.phone}</p>\r\n                        <button onClick={() => onDelete(contact.id)} className = {s.button}>Delete</button>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n\r\n","import ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\nfunction App(){\r\n\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n\r\n    )\r\n  \r\n}\r\n\r\nexport default App;\r\n\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport * as actions from './phonebook-actions'\r\nimport * as operations from './phonebook-operations'\r\n\r\n\r\n\r\nconst itemsReducer = createReducer([], {\r\n   [operations.getAllContacts.fulfilled]: (_, action) => action.payload,\r\n   [operations.addContact.fulfilled]: (state, action) => {\r\n        if (state.some(contact => {\r\n            return contact.name.toLowerCase() === action.payload.name.toLowerCase()\r\n        })){\r\n            alert(`${action.payload.name} is already in cotacts`)\r\n            return state\r\n        }\r\n        return [...state, action.payload]\r\n   },\r\n   [operations.delContact.fulfilled]: (state, action) => state.filter(contact => contact.id !== action.payload.id),  \r\n})\r\n\r\nconst loadingReducer = createReducer(false, {\r\n    [operations.getAllContacts.pending]: () => true,\r\n    [operations.getAllContacts.fulfilled]: () => false,\r\n    [operations.getAllContacts.rejected]: () => false, \r\n    [operations.getAllContacts.pending]: () => true,\r\n    [operations.getAllContacts.fulfilled]: () => false,\r\n    [operations.getAllContacts.rejected]: () => false,\r\n    [operations.delContact.pending]: () => true,\r\n    [operations.delContact.fulfilled]: () => false,\r\n    [operations.delContact.rejected]: () => false\r\n})\r\n\r\n\r\nconst filterReducer = createReducer('', {\r\n    [actions.filterContacts]: (state, action) => action.payload,\r\n})\r\n\r\n\r\nexport {itemsReducer, filterReducer, loadingReducer}\r\n\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\"\r\nimport {itemsReducer, filterReducer} from \"./phonebook/phonebook-reducers\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n})\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\n\r\nexport {store}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {store} from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}